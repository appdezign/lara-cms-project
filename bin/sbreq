#!/bin/bash

# ~~~~~~~~~~~~~~~~
# This is the script for a SERVEBOLT server, running PHP 8.1
# ~~~~~~~~~~~~~~~~

BASEDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && cd .. && pwd )"

# colors
CLR1='\033[1;33m' # yellow
CLR2='\033[1;35m' # purple
NC='\033[0m' # No Color

package=$1
newversion=$2

# check arguments
if [ $# -lt 2 ]
  then
	echo -e "${CLR1}Syntax: req [core/base/demo] [newversion]${NC}"
	exit 1
fi

if [ $package != "core" ] && [ $package != "base" ] && [ $package != "demo" ]
  then
	echo -e "${CLR1}Error: ${package} is not a valid package${NC}"
	echo -e "${CLR1}Syntax: req [core/base/demo] [newversion]${NC}"
	exit 1
fi

cd "${BASEDIR}" || exit


php artisan down --render=maintenance

if [ $package == "core" ]
  then
    echo -e "${CLR1}~~~~~~~~~~~~~~~~ core ~~~~~~~~~~~~~~~~${NC}"
    php composer2 clear-cache
    COMPOSER_MEMORY_LIMIT=-1 php composer2 require appdezign/lara-cms:"$newversion" --ignore-platform-reqs --no-scripts
fi

sleep 2

if [ $package == "base" ]
  then
    echo -e "${CLR1}~~~~~~~~~~~~~~~~ base theme ~~~~~~~~~~~~~~~~${NC}"
    php composer2 clear-cache
    COMPOSER_MEMORY_LIMIT=-1 php composer2 require appdezign/lara-base-theme:"$newversion" --ignore-platform-reqs --no-scripts
fi

sleep 2

if [ $package == "demo" ]
  then
    echo -e "${CLR1}~~~~~~~~~~~~~~~~ demo theme ~~~~~~~~~~~~~~~~${NC}"
    php composer2 clear-cache
    COMPOSER_MEMORY_LIMIT=-1 php composer2 require appdezign/lara-demo-theme:"$newversion" --ignore-platform-reqs --no-scripts
fi

sleep 2

php artisan up


echo -e "${CLR1}~~~~~~~~~~~~ DONE ~~~~~~~~~~~~${NC}"