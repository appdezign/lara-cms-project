#!/bin/bash

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# This is the script for a PLESK server, running PHP 8.1
# Version 8.2.40
# Date: 20-08-2024
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SCRIPTVERSION="8.2.40"

fixdirpermissions() {

	local dirname=$1
	local dirperm=$2
	local fileperm=$3
	local verbose=$4

	if [ $CURRENTUSER == "root" ]; then
		if [ "$verbose" != "silent" ]; then
			echo "change owner of: /$dirname/* to $USER:$GROUP"
		fi
		THIS=$(basename -- "$0")
		USER=$(stat -c '%U' ./bin/$THIS)
		GROUP=$(stat -c '%G' ./bin/$THIS)
		chown -R $USER:$GROUP ./"$dirname"
	fi

	if [ "$verbose" != "silent" ]; then
		echo "change dir permissions of: /$dirname to $dirperm"
	fi
	find "$dirname" -type d -print0 | xargs -0 chmod "$dirperm"

	if [ "$verbose" != "silent" ]; then
		echo "change file permissions of: /$dirname/* to $fileperm"
	fi
	find "$dirname" -type f -print0 | xargs -0 chmod "$fileperm"

	if [ "$verbose" != "silent" ]; then
		echo ""
	fi
}

fixfilepermissions() {

	local filename=$1
	local fileperm=$2
	local verbose=$3

	if [ $CURRENTUSER == "root" ]; then
		if [ "$verbose" != "silent" ]; then
			echo "change owner of: /$filename to $USER:$GROUP"
		fi
		THIS=$(basename -- "$0")
		USER=$(stat -c '%U' ./bin/$THIS)
		GROUP=$(stat -c '%G' ./bin/$THIS)
		chown -R $USER:$GROUP ./"$dirname"
	fi

	if [ "$verbose" != "silent" ]; then
		echo "change file permissions of: /$filename to $fileperm"
	fi

	chmod "$fileperm" ./"$filename"

	if [ "$verbose" != "silent" ]; then
		echo ""
	fi

}

BASEDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && cd .. && pwd )"

# current user
CURRENTUSER=$(whoami)

# colors
CLR1='\033[1;33m' # yellow
CLR2='\033[1;35m' # purple
NC='\033[0m' # No Color

# get arguments
package=$1
newversion=$2

# check arguments
if [ $# -lt 2 ]; then
	echo -e "${CLR1}Syntax: req [core/base/demo/all] [newversion]${NC}"
	exit 1
fi

if [ $package != "core" ] && [ $package != "base" ] && [ $package != "demo" ] && [ $package != "all" ]; then
	echo -e "${CLR1}Error: ${package} is not a valid package${NC}"
	echo -e "${CLR1}Syntax: req [core/base/demo] [newversion]${NC}"
	exit 1
fi

# Go to Base dir
cd "${BASEDIR}" || exit

# path vars
PHP8PATH="/opt/plesk/php/8.1/bin/php"
COMPPATH="/usr/lib64/plesk-9.0/composer.phar"

# start
echo -e "${CLR2}~~~~~~~~~~~~ script version: $SCRIPTVERSION ~~~~~~~~~~~~${NC}"
echo -e "${CLR2}~~~~~~~~~~~~ running script as: $CURRENTUSER ~~~~~~~~~~~~${NC}"
echo ""

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# enable Laravel maintenance mode
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
echo -e "${CLR1}~~~~~~~~~~~~~~~~ maintenance ~~~~~~~~~~~~~~~~${NC}"
"$PHP8PATH" artisan down --render=maintenance
fixfilepermissions storage/framework/maintenance.php 0644 silent
fixfilepermissions storage/framework/down 0644 silent

# make sure we can run composer as root
export COMPOSER_ALLOW_SUPERUSER=1

# Update Lara CORE
if [ $package == "core" ] || [ $package == "all" ]; then
	echo -e "${CLR1}~~~~~~~~~~~~~~~~ update core ~~~~~~~~~~~~~~~~${NC}"
	COMPOSER_MEMORY_LIMIT=-1 "$PHP8PATH" "$COMPPATH" require appdezign/lara-cms:"$newversion" --ignore-platform-reqs --no-scripts
fi

sleep 2

# Update Lara BASE
if [ $package == "base" ] || [ $package == "all" ]; then
	echo -e "${CLR1}~~~~~~~~~~~~~~~~ update base theme ~~~~~~~~~~~~~~~~${NC}"
	COMPOSER_MEMORY_LIMIT=-1 "$PHP8PATH" "$COMPPATH" require appdezign/lara-base-theme:"$newversion" --ignore-platform-reqs --no-scripts
fi

sleep 2

# Update Lara DEMO
if [ $package == "demo" ] || [ $package == "all" ]; then
	echo -e "${CLR1}~~~~~~~~~~~~~~~~ update demo theme ~~~~~~~~~~~~~~~~${NC}"
	COMPOSER_MEMORY_LIMIT=-1 "$PHP8PATH" "$COMPPATH" require appdezign/lara-demo-theme:"$newversion" --ignore-platform-reqs --no-scripts
fi

sleep 2

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Fix permissions when we run composer as root
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

echo -e "${CLR1}~~~~~~~~~~~~~~~~ fix permission ~~~~~~~~~~~~~~~~${NC}"

fixdirpermissions vendor 0755 0644
fixdirpermissions laracms 0755 0644
fixdirpermissions storage 0755 0644

fixdirpermissions laracms/app/Http/Controllers/Admin/Entity 0755 0444 silent
fixdirpermissions laracms/app/Http/Controllers/Admin/Form 0755 0444 silent
fixdirpermissions laracms/app/Http/Controllers/Front/Entity 0755 0444 silent
fixdirpermissions laracms/app/Http/Controllers/Front/Form 0755 0444 silent
fixdirpermissions laracms/app/Lara 0755 0444 silent
fixdirpermissions laracms/app/Models 0755 0444 silent

fixfilepermissions composer.json 0644
fixfilepermissions composer.lock 0644

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# disable Laravel maintenance mode
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
echo -e "${CLR1}~~~~~~~~~~~~~~~~ maintenance ~~~~~~~~~~~~~~~~${NC}"
"$PHP8PATH" artisan up

echo -e "${CLR2}~~~~~~~~~~~~ DONE ~~~~~~~~~~~~${NC}"